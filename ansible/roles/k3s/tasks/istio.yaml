- name: Check if Service Exists
  ansible.builtin.stat: "path=/etc/systemd/system/k3s.service"
  register: k3s_service_status

- name: Deploy Istio
  block:
    - name: Check if Istio Exists
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: istio-system
      register: k3s_istio_status

    - name: Deploy Istio installation script
      block:
        - name: Download Istio
          ansible.builtin.shell:
            cmd: curl -L https://istio.io/downloadIstio | sh -
          environment:
            ISTIO_VERSION: "{{ istio_version }}"

        - name: Precheck Istio installation
          ansible.builtin.shell:
            cmd: "{{ istio_path }}/bin/istioctl x precheck"

        - name: Install Istio
          ansible.builtin.shell:
            cmd: "{{ istio_path }}/bin/istioctl install --set profile=demo -y"

      when: k3s_istio_status.resources is defined and k3s_istio_status.resources|length == 0

    - name: Define Gateway URL
      block:
      - name: Get IngressGateway host
        ansible.builtin.command: "kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}'"
        register: ingress_host
      - name: Get IngressGateway insecure port
        ansible.builtin.command: "kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}'"
        register: ingress_port
      - name: Get IngressGateway secured port
        ansible.builtin.command: "kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"https\")].port}'"
        register: ingress_secure_port

      - name: Print Insecure IngressGateway URL
        ansible.builtin.debug:
          msg: "Insecure IngressGateway URL: http://{{ ingress_host.stdout }}:{{ ingress_port.stdout }}"
      - name: Print Secure IngressGateway URL
        ansible.builtin.debug:
          msg: "Secure IngressGateway URL: https://{{ ingress_host.stdout }}:{{ ingress_secure_port.stdout }}"

  when: k3s_service_status.stat.exists

